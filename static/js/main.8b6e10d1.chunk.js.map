{"version":3,"sources":["components/CommonStyles.js","components/About.js","components/Utility.js","components/PatternManager.js","components/Agent.js","components/Liarbird.js","components/OctreeManager.js","components/World.js","components/FancyButton.js","components/Posters.js","components/Footer.js","components/App.js","index.js","components/front_page.jpg","models/jellyman.glb","components/postcard_back.jpg","components/hyde_park.jpg"],"names":["color","fontSize","padding","fontFamily","styles","container","display","flexDirection","alignSelf","alignItems","marginTop","title","letterSpacing","body","textAlign","img","width","opacity","tada","animationName","Radium","keyframes","animationDuration","animationFillMode","animationTimingFunction","animationIterationCount","About","props","state","titleStyle","style","src","image","alt","React","Component","axisRotation","axis_x","axis_y","axis_z","angle_radians","q","norm","Math","sqrt","cos","sin","set","Pattern","patternObj","this","theta_rad","amp","isClockwise","dir","originPos","pos","moveFactor","move","targetPos","THREE","maxTheta","r","x","z","y","EllipsePattern","radX","radx","radZ","radz","PI","xPos","cartesianX","zPos","cartesianZ","yPos","cartesianY","updateTheta","RosePattern","rad","phase","ph","numPetals","numP","isSin","FLOCKING_WEIGHTS","Agent","scene","i","startY","idx","position","velocity","acceleration","fSteer","sumVec","diffVec","rotationA","rotationB","initialPatternPosition","target","maxForce","maxSpeed","maxSlowDownSpeed","slowDownTolerance","arriveTolerance","smoothFactor","initPosition","setupPattern","clone","d","radius","amplitude","isSinusoidal","roseConstructor","degToRad","rosePattern","nAgents","applyBehaviors","updatePosition","seek","applyForce","flock","length","seperation","cohesion","align","subVectors","value","low1","high1","low2","high2","lengthSq","normalize","newMaxSpeed","multiplyScalar","sub","clampLength","add","addVectors","lerp","forEach","a","divideScalar","loader","GLTFLoader","Liarbird","loadLiarbird","load","model","gltf","jellyman","frustumCulled","agent","castShadow","receiveShadow","agentRotation","rotation","agentScale","scale","agentAnimations","animations","animationMixer","clipAction","play","console","log","undefined","error","delta","update","updateAgent","syncPosition","syncRotation","copy","azimuth","inclination","v","atan2","acos","Utility","multiply","setRotationFromQuaternion","setTarget","getTargetPos","Octree","origin","boundary","min","Vector3","max","tree","PointOctree","insert","findPoints","pointCount","OctreeManager","flockOctree","flockTarget","liarbirds","setupOctree","l","insertPoint","scanForPoints","n","push","OrbitControls","oc","WORLD_STATE","zIndex","top","overflowX","overflowY","fadeIn","World","ref","createRef","camera","window","innerWidth","innerHeight","renderer","alpha","octreeManager","curWorldState","controls","stats","Stats","clock","setSize","setPixelRatio","devicePixelRatio","outputEncoding","current","appendChild","domElement","dom","ambientLight","intensity","directionalLight","inc","abs","startPos","enablePan","enabled","enableKeys","ellipseConstructor","flockPattern","initThreeRender","scheduleStates","getDelta","getNeighbours","updateRosePattern","begin","render","end","requestAnimationFrame","bind","h","aspect","updateProjectionMatrix","setInterval","backgroundColor","borderRadius","borderStyle","borderWidth","borderColor","lineHeight","pulse","FancyButton","containerStyle","href","rel","justifyContent","height","poster","marginRight","Posters","postcard_back","hyde_park","marginBottom","link","Footer","developed","content","marginLeft","App","totalRef","worldRef","setTimeout","totalHeight","scrollHeight","updateRendererHeight","ReactDOM","document","getElementById","module","exports"],"mappings":"+LAAMA,EACI,UADJA,EAEM,0BAFNA,EAGI,UAGJC,EAGS,OAHTA,EAIK,OAJLA,EAMG,OANHA,EASI,OATJA,EAUQ,OAVRA,EAWS,OAXTA,EAkBM,OAlBNA,EAmBU,OAOVC,EAGS,MAHTA,EAIK,OAJLA,EAMI,OANJA,EAOQ,OAPRA,EAQS,OARTA,EAUI,OAVJA,EAWQ,OAXRA,EAcO,OAdPA,EAuBU,QAKVC,EACG,eADHA,EAEa,iBAFbA,EAIM,gBAJNA,EAKK,e,yBC1DLC,EAAS,CACXC,UAAW,CACPC,QAAS,OACTC,cAAe,SACfC,UAAW,SACXC,WAAY,SACZC,UAAWR,EAEX,4BAA6B,CAC3BQ,UAAWR,GAGb,yDAA0D,CACxDQ,UAAWR,GAGb,6BAA8B,CAC5BQ,UAAWR,IAIjBS,MAAO,CACLR,WAAYA,EACZH,MAAOA,EACPY,cAAe,MACfX,SAAUA,EAEV,4BAA6B,CAC3BA,SAAUA,GAGZ,yDAA0D,CACxDA,SAAUA,GAGZ,6BAA8B,CAC5BA,SAAUA,IAIdY,KAAM,CACJb,MAAOA,EACPG,WAAYA,EACZF,SAAUA,EACVa,UAAW,SACXJ,UAAWR,EAEX,4BAA6B,CAC3BQ,UAAWR,EACXD,SAAUA,GAGZ,6BAA8B,CAC5BA,SAAUA,IAIdc,IAAK,CACHL,UAAWR,EACXc,MAAO,OACPC,QAAS,OAET,yDAA0D,CACxDP,UAAWR,GAGb,4BAA6B,CAC3BQ,UAAWR,IAIfgB,KAAM,CACJC,cAAeC,IAAOC,UAAUH,OAAM,QACtCI,kBAAmB,MACnBC,kBAAmB,WACnBC,wBAAyB,cACzBC,wBAAyB,MAazBC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAM,GAFM,E,qDAQjB,IAAIC,EAAa,CAACzB,EAAOO,MAAOP,EAAOc,MACvC,OACE,yBAAKY,MAAO1B,EAAOC,WACjB,yBAAKyB,MAAOD,GAAZ,aACA,yBAAKC,MAAO1B,EAAOS,MACjB,+BAvBE,qBAuBF,KADF,WArBM,yRAqBN,OACqD,6BAAK,6BArBpD,yNAsBG,mCArBH,oBAqBG,aApBH,wGAsBJ,mCArBI,YAqBJ,aApBI,kOAuBN,yBAAKiB,MAAO1B,EAAOW,IAAKgB,IAAKC,IAAOC,IAAK,e,GApB7BC,IAAMC,WA0BXf,cAAOM,G,gCC1GhBU,EAAe,SAACC,EAAQC,EAAQC,EAAQC,EAAeC,GACzD,IAAIC,EAAOC,KAAKC,KAAKP,EAASA,EAASC,EAASA,EAASC,EAASA,GAClEF,GAAUK,EACVJ,GAAUI,EACVH,GAAUG,EACV,IAAIG,EAAMF,KAAKE,IAAIL,EAAgB,GAC/BM,EAAMH,KAAKG,IAAIN,EAAgB,GACnCC,EAAEM,IAAIV,EAASS,EAAKR,EAASQ,EAAKP,EAASO,EAAKD,ICpB9CG,E,WACF,WAAYC,GAAa,oBACrBC,KAAKC,UAAY,EACjBD,KAAKE,IAAMH,EAAWG,IACtBF,KAAKG,YAAcJ,EAAWK,IAC9BJ,KAAKK,UAAYN,EAAWO,IAC5BN,KAAKO,WAAaR,EAAWS,KAC7BR,KAAKS,UAAY,IAAIC,UAAc,EAAG,EAAG,G,wDAGjCC,GAERX,KAAKC,UAAYD,KAAKG,YAClBH,KAAKC,UAAYD,KAAKO,WACtBP,KAAKC,UAAYD,KAAKO,WAG1BP,KAAKC,UAAYD,KAAKC,WAAaU,EAAW,EAAIX,KAAKC,Y,iCAGhDW,GACP,OAAOZ,KAAKK,UAAUQ,EAAID,EAAInB,KAAKE,IAAIK,KAAKC,a,iCAGrCW,GACP,OAAOZ,KAAKK,UAAUS,EAAIF,EAAInB,KAAKG,IAAII,KAAKC,a,iCAGrCW,GACP,OAAOZ,KAAKK,UAAUU,EAAIf,KAAKE,IAAMT,KAAKG,IAAII,KAAKC,a,qCAInD,OAAOD,KAAKS,Y,iDAqBPO,EAAb,kDACI,WAAYjB,GAAa,IAAD,8BACpB,cAAMA,IACDkB,KAAOlB,EAAWmB,KACvB,EAAKC,KAAOpB,EAAWqB,KACvB,EAAKT,SAAW,EAAElB,KAAK4B,GAJH,EAD5B,qDAUQ,IAAIC,EAAOtB,KAAKuB,WAAWvB,KAAKiB,MAC5BO,EAAOxB,KAAKyB,WAAWzB,KAAKmB,MAC5BO,EAAO1B,KAAK2B,aAChB3B,KAAKS,UAAUZ,IAAIyB,EAAMI,EAAMF,GAE/BxB,KAAK4B,YAAY5B,KAAKW,cAf9B,GAAoCb,GAqCvB+B,EAAb,kDACI,WAAY9B,GAAa,IAAD,8BACpB,cAAMA,IACD+B,IAAM/B,EAAW+B,IACtB,EAAKC,MAAQhC,EAAWiC,GACxB,EAAKC,UAAYlC,EAAWmC,KAC5B,EAAKC,MAAQpC,EAAWoC,MACxB,EAAKxB,SAAWlB,KAAK4B,GAND,EAD5B,qDAWQ,IAAIC,EAAMI,EAAMF,EACZZ,EAAIZ,KAAKmC,MAAQnC,KAAK8B,IAAMrC,KAAKG,IAAII,KAAK+B,MAAQ/B,KAAKiC,UAAYjC,KAAKC,WACxED,KAAK8B,IAAMrC,KAAKE,IAAIK,KAAK+B,MAAQ/B,KAAKiC,UAAYjC,KAAKC,WAE3DqB,EAAOtB,KAAKuB,WAAWX,GACvBY,EAAOxB,KAAKyB,WAAWb,GACvBc,EAAO1B,KAAK2B,aAEZ3B,KAAKS,UAAUZ,IAAIyB,EAAMI,EAAMF,GAE/BxB,KAAK4B,YAAY5B,KAAKW,cArB9B,GAAiCb,GCzF3BsC,EACU,EADVA,EAEQ,IAFRA,EAGS,IAGMC,E,WACjB,WAAYC,EAAOC,EAAGC,EAAQT,GAAQ,oBAClC/B,KAAKyC,IAAMF,EAEXvC,KAAK0C,SAAW,IAAIhC,UAAc,EAAG,EAAG,GACxCV,KAAK2C,SAAW,IAAIjC,UAAc,EAAG,IAAM,GAC3CV,KAAK4C,aAAe,IAAIlC,UAAc,EAAG,EAAG,GAC5CV,KAAK6C,OAAS,IAAInC,UAAc,EAAG,EAAG,GACtCV,KAAK8C,OAAS,IAAIpC,UAAc,EAAG,EAAG,GACtCV,KAAK+C,QAAU,IAAIrC,UAAc,EAAG,EAAG,GACvCV,KAAKgD,UAAY,IAAItC,aACrBV,KAAKiD,UAAY,IAAIvC,aAErBV,KAAKkD,uBAAyB,IAAIxC,UAAc,EAAG8B,EAAQ,GAE3DxC,KAAKmD,OAAS,IAAIzC,UAAc,EAAG,EAAG,GAGtCV,KAAKoD,SAAW,IAChBpD,KAAKqD,SAAW,IAChBrD,KAAKsD,iBAAmB,EAGxBtD,KAAKuD,kBAAoB,GAAM,GAC/BvD,KAAKwD,gBAAkB,KAGvBxD,KAAKyD,aAAe,KAGpBzD,KAAK0D,eAGL1D,KAAK2D,aAAa5B,G,2DAIlB/B,KAAK0C,SAAS7B,EAAI,EAClBb,KAAK0C,SAAS5B,EAAI,EAClBd,KAAK0C,SAAS3B,GAAK,K,mCAGVgB,GAET,IAAIzB,EAAMN,KAAKkD,uBAAuBU,QAClCC,EAAI7D,KAAKyC,IAAM,IAAM,EAMrB1C,EDcmB,SAACM,EAAWyD,EAAQ/B,EAAOE,EAAW8B,EAAWC,EAAc7D,EAAaI,GACvG,MAAO,CACHD,IAAKD,EACLyB,IAAKgC,EACL9B,GAAID,EACJG,KAAMD,EACN/B,IAAK6D,EACL5B,MAAO6B,EACP5D,IAAKD,EACLK,KAAMD,GCvBW0D,CAAgB3D,EAJvB,GAIiCyB,EAF9B,EACH,GAJE8B,EAK0DA,EAHrDnD,OAAWwD,SAAS,KAIrClE,KAAKmE,YAAc,IAAItC,EAAY9B,K,kCAG3BqE,GAERpE,KAAKqE,eAAeD,GACpBpE,KAAKsE,mB,qCAGMF,GACXpE,KAAKuE,OACLvE,KAAKwE,aAELxE,KAAKyE,MAAML,K,4BAGTA,GACEA,EAAQM,OAAS,IAEjB1E,KAAK2E,WAAWP,GAChBpE,KAAKwE,aAGLxE,KAAK4E,SAASR,GACdpE,KAAKwE,aAGLxE,KAAK6E,MAAMT,GACXpE,KAAKwE,gB,6BAKTxE,KAAK6C,OAAOiC,WAAW9E,KAAKmD,OAAQnD,KAAK0C,UACzC,IF7FWqC,EAAOC,EAAMC,EAAOC,EAAMC,EE6FjCtB,EAAI7D,KAAK6C,OAAOuC,WAGpB,GAFApF,KAAK6C,OAAOwC,YAERxB,EAAI7D,KAAKuD,mBAAqBM,EAAI7D,KAAKwD,gBAAiB,CAExD,IAAI8B,GFlGGP,EEkG6BlB,EFlGtBmB,EEkGyBhF,KAAKuD,kBFlGxB0B,EEkG2CjF,KAAKwD,gBFlGzC0B,EEkG0DlF,KAAKqD,SFlGzD8B,EEkGmEnF,KAAKsD,iBFjG1G4B,GAAQC,EAAQD,IAASH,EAAQC,IAASC,EAAQD,IEkGjDhF,KAAK6C,OAAO0C,eAAeD,QAG3BtF,KAAK6C,OAAO0C,eAAevF,KAAKqD,UAGpCrD,KAAK6C,OAAO2C,IAAIxF,KAAK2C,UAErB3C,KAAK6C,OAAO4C,aAAa,MAAOzF,KAAKoD,Y,mCAIrCpD,KAAK4C,aAAa8C,IAAI1F,KAAK6C,U,uCAK3B7C,KAAK8C,OAAO6C,WAAW3F,KAAK2C,SAAU3C,KAAK4C,cAI3C5C,KAAK2C,SAAW3C,KAAK2C,SAASiD,KAAK5F,KAAK8C,OAAQ9C,KAAKyD,cAErDzD,KAAK2C,SAAS8C,aAAa,KAAMzF,KAAKqD,UAEtCrD,KAAK0C,SAASgD,IAAI1F,KAAK2C,UAGvB3C,KAAK4C,aAAa2C,eAAe,K,iCAI1BnB,GAAU,IAAD,OAChBpE,KAAK6C,OAAOhD,IAAI,EAAG,EAAG,GACtBG,KAAK8C,OAAOjD,IAAI,EAAG,EAAG,GAElBuE,EAAQM,OAAS,IACjBN,EAAQyB,SAAQ,SAAAC,GACZ,EAAK/C,QAAQ+B,WAAW,EAAKpC,SAAUoD,EAAEpD,UACzC,EAAKK,QAAQsC,YACb,EAAKtC,QAAQgD,aAAa,EAAKhD,QAAQ2B,UACvC,EAAK5B,OAAO4C,IAAI,EAAK3C,YAIzB/C,KAAK8C,OAAOiD,aAAa3B,EAAQM,QAC7B1E,KAAK8C,OAAOsC,WAAa,IACzBpF,KAAK8C,OAAOuC,YACZrF,KAAK8C,OAAO2C,aAAa,MAAOzF,KAAKqD,UACrCrD,KAAK6C,OAAOiC,WAAW9E,KAAK8C,OAAQ9C,KAAK2C,UACzC3C,KAAK6C,OAAO4C,aAAa,MAAOzF,KAAKoD,UACrCpD,KAAK6C,OAAO0C,eAAenD,O,+BAM9BgC,GAAU,IAAD,OACdpE,KAAKmD,OAAOtD,IAAI,EAAG,EAAG,GACtBG,KAAK6C,OAAOhD,IAAI,EAAG,EAAG,GAElBuE,EAAQM,OAAS,IACjBN,EAAQyB,SAAQ,SAAAC,GACZ,EAAK3C,OAAOuC,IAAII,EAAEpD,aAGtB1C,KAAKmD,OAAO4C,aAAa3B,EAAQM,QACjC1E,KAAKuE,OACLvE,KAAK6C,OAAO0C,eAAenD,M,4BAK7BgC,GAAU,IAAD,OACXpE,KAAK6C,OAAOhD,IAAI,EAAG,EAAG,GAElBuE,EAAQM,OAAS,IACjBN,EAAQyB,SAAQ,SAAAC,GACZ,EAAKjD,OAAO6C,IAAII,EAAEnD,aAGtB3C,KAAK6C,OAAOkD,aAAa3B,EAAQM,QACjC1E,KAAK6C,OAAOwC,YACZrF,KAAK6C,OAAO0C,eAAevF,KAAKqD,UAChCrD,KAAK6C,OAAO2C,IAAIxF,KAAK2C,UACrB3C,KAAK6C,OAAO4C,aAAa,MAAOzF,KAAKoD,UACrCpD,KAAK6C,OAAO0C,eAAenD,Q,yBCvLjC4D,GAAS,IAAIC,IAEEC,G,kDACjB,WAAY5D,EAAOG,EAAKD,EAAQT,GAAQ,IAAD,8BACnC,cAAMO,EAAOG,EAAKD,EAAQT,IACrBoE,aAAa7D,GAFiB,E,yDAK1BA,GAAQ,IAAD,OAChB0D,GAAOI,KAAKC,MAAO,SAAAC,GAEf,EAAKC,SAAWD,EAAKhE,MAErB,EAAKiE,SAAS7D,SAAS7C,IAAI,GAAI,IAAK,GACpC,EAAK0G,SAASC,eAAgB,EAG9B,EAAKC,MAAQ,IAAI/F,QACjB,EAAK+F,MAAMf,IAAI,EAAKa,UACpB,EAAKE,MAAMD,eAAgB,EAC3B,EAAKC,MAAMC,YAAa,EACxB,EAAKD,MAAME,eAAgB,EAE3B,EAAKC,cAAgB,EAAKH,MAAMI,SAChC,EAAKC,WAAa,EAAKL,MAAMM,MAC7B,EAAKC,gBAAkBV,EAAKW,WAG5B,EAAKH,WAAWjH,IAAI,GAAI,GAAI,IAG5B,EAAKqH,eAAiB,IAAIxG,iBAAqB,EAAK+F,OACvC,EAAKS,eAAeC,WAAW,EAAKH,gBAAgB,IAC1DI,OAEPC,QAAQC,IAAI,EAAKb,OAGjBnE,EAAMoD,IAAI,EAAKe,cAChBc,GAAW,SAAWC,GACrBH,QAAQG,MAAOA,Q,6BAIhBC,EAAOrD,GAENpE,KAAKkH,iBACLlH,KAAKkH,eAAeQ,OAAOD,GAG3BzH,KAAK2H,YAAYvD,GAGjBpE,KAAK4H,eACL5H,KAAK6H,kB,qCAOT7H,KAAKyG,MAAM/D,SAASoF,KAAK9H,KAAK0C,Y,qCAK9B,IAAIqF,EAASC,EHhEJC,IGiEiBjI,KAAK2C,SAA/BoF,EHhEGtI,KAAKyI,MAAMD,EAAElH,EAAGkH,EAAEpH,GGiErBmH,EH9DY,SAACC,GACjB,OAAOxI,KAAK0I,KAAKF,EAAEnH,EAAImH,EAAEvD,UG6DP0D,CAAoBpI,KAAK2C,UAEvCyF,EAAqB,EAAG,EAAG,EAAGL,EAAUtI,KAAK4B,GAAG,EAAGrB,KAAKgD,WACxDoF,EAAqB,EAAG,EAAG,EAAG3I,KAAK4B,GAAG,EAAI2G,EAAahI,KAAKiD,WAE5DjD,KAAKgD,UAAUqF,SAASrI,KAAKiD,WAC7BjD,KAAKyG,MAAM6B,0BAA0BtI,KAAKgD,WAG1ChD,KAAKuG,SAASM,SAAS9F,GAAK,M,0CAK3Bf,KAAKmE,YAAYuD,SACjB1H,KAAKuI,UAAUvI,KAAKmE,YAAYqE,kB,gCAG3BrF,GACNnD,KAAKmD,OAAO2E,KAAK3E,O,GArFad,G,qCCFzBoG,GAAb,WACI,WAAYC,EAAQC,GAAW,oBAC3B,IAAIC,EAAM,IAAIC,KAAQ,EAAG,EAAG,GACxBC,EAAM,IAAID,KAAQ,EAAG,EAAG,GAE5BD,EAAI/H,EAAI6H,EAAO7H,EAAI8H,EACnBC,EAAI7H,EAAI2H,EAAO3H,EAAI4H,EACnBC,EAAI9H,EAAI4H,EAAO5H,EAAI6H,EAEnBG,EAAIjI,EAAI6H,EAAO7H,EAAI8H,EACnBG,EAAI/H,EAAI2H,EAAO3H,EAAI4H,EACnBG,EAAIhI,EAAI4H,EAAO5H,EAAI6H,EAEnB3I,KAAK+I,KAAO,IAAIC,KAAYJ,EAAKE,EAf5B,EACM,GACnB,wDAiBgBpG,EAAU+D,GAClBzG,KAAK+I,KAAKE,OAAOvG,EAAU+D,KAlBnC,oCAsBkB/D,EAAUoB,GACpB,OAAO9D,KAAK+I,KAAKG,WAAWxG,EAAUoB,GAAQ,KAvBtD,mCA2BQ,OAAO9D,KAAK+I,KAAKI,eA3BzB,KAiCaC,GAAb,WACI,aAAe,oBACXpJ,KAAKqJ,YAAc,GAF3B,mDAKWC,EAAaC,GAChBvJ,KAAKwJ,YAAYF,EAAaC,KANtC,kCASgBD,EAAaC,GAAY,IAAD,OAChCvJ,KAAKqJ,YAAc,IAAIZ,GAAOa,EAZT,IAarBC,EAAU1D,SAAQ,SAAA4D,GACd,EAAKJ,YAAYK,YAAYD,EAAE/G,SAAU+G,QAZrD,oCAiBkBf,GACV,IAAoBtE,EAAQ,GAM5B,OALapE,KAAKqJ,YAAYM,cAAcjB,EApB3B,IAqBN7C,SAAQ,SAAA+D,GACf,IAAI9D,EAAI8D,EAAC,KACTxF,EAAQyF,KAAK/D,MAEV1B,MAxBf,KC7BM0F,GAAgBC,IAAGrJ,GAEZsJ,IADE,IAAItJ,gBAER,GADEsJ,GAEJ,EAGH9M,GAAS,CACXC,UAAW,CAEP8M,OAAQ,EACRC,IAAK,KACLC,UAAW,SACXC,UAAW,QAGfC,OAAQ,CACNpM,cAAeC,IAAOC,UAAUkM,SAAQ,QACxCjM,kBAAmB,KACnBC,kBAAmB,WACnBC,wBAAyB,WAIzBgM,G,kDACJ,WAAY7L,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAM,GAIX,EAAK6L,IAAMvL,IAAMwL,YAEjB,EAAKlI,MAAQ,IAAI5B,QAEjB,EAAK+J,OAAS,IAAI/J,oBAAwB,IAAKgK,OAAOC,WAAWD,OAAOE,YAAa,IAAM,KAC3F,EAAKH,OAAO/H,SAAS7C,IAAI,IAAK,IAAK,KAGnC,EAAKgL,SAAW,IAAInK,gBAAoB,CACtCoK,OAAO,IAIT,EAAKvB,UAAY,GAGjB,EAAKwB,cAAgB,IAAI3B,GAGzB,EAAK4B,cAAgBhB,GAErB,EAAKiB,SAAW,IAAInB,GAAc,EAAKW,QAEvC,EAAKS,MAAQ,IAAIC,KAEjB,EAAKC,MAAQ,IAAI1K,QA/BA,E,gEAoCjBV,KAAK6K,SAASQ,QAAQX,OAAOC,WAAYD,OAAOE,aAChD5K,KAAK6K,SAASS,cAAcZ,OAAOa,kBACnCvL,KAAK6K,SAASW,eAAiB9K,eAG/BV,KAAKuK,IAAIkB,QAAQC,YAAY1L,KAAK6K,SAASc,YAC3C3L,KAAKuK,IAAIkB,QAAQC,YAAY1L,KAAKkL,MAAMU,KAGxC,IAAIC,EAAe,IAAInL,eAAmB,UAC1CmL,EAAaC,UAAY,IACzB,IAAIC,EAAmB,IAAIrL,mBAAuB,UAClDqL,EAAiBD,UAAY,EAC7BC,EAAiBrJ,SAAS7C,IAAI,EAAG,GAAI,IAAIwF,YACzCrF,KAAKsC,MAAMoD,IAAKmG,GAChB7L,KAAKsC,MAAMoD,IAAIqG,GAUf,IAPA,IAGIhK,EAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,IAC3CiK,GAAOvM,KAAKwM,KAJA,KACA,IACA,GAGZC,GALY,IAOP3J,EAAI,EAAGA,EALA,GAKeA,IAAK,CAChC,IAAIkH,EAAI,IAAIvD,GAASlG,KAAKsC,MAAOC,EAAG2J,EAAUnK,EAAMQ,IACpDvC,KAAKuJ,UAAUM,KAAKJ,GACpByC,GAAYF,EAIhBhM,KAAKiL,SAASkB,WAAY,EAG1BnM,KAAKiL,SAASmB,SAAU,EACxBpM,KAAKiL,SAASoB,YAAa,EAG3B,IAGItM,EJnE0B,SAACM,EAAWY,EAAME,EAAM4C,EAAW5D,EAAaI,GAC9E,MAAO,CACHD,IAAKD,EACLa,KAAMD,EACNG,KAAMD,EACNjB,IAAK6D,EACL3D,IAAKD,EACLK,KAAMD,GI4DO+L,CAHT,IAAI5L,UAAc,EAAG,EAAG,GAGO,GAAI,EAAG,IAAI,EAFjCA,OAAWwD,SAAS,KAGrClE,KAAKuM,aAAe,IAAIvL,EAAejB,GAGvCC,KAAKwM,kBACLxM,KAAKyM,mB,+BAGG,IAAD,OAEP,GAAIzM,KAAKgL,gBAAkBhB,GAAmB,CAC5ChK,KAAKuM,aAAa7E,SAClB,IAAI4B,EAActJ,KAAKuM,aAAa/D,eAEpCxI,KAAK+K,cAAcrD,OAAO4B,EAAatJ,KAAKuJ,WAG9C,IAAI9B,EAAQzH,KAAKoL,MAAMsB,WACnBtI,EAAU,GACVpE,KAAKuJ,UAAU7E,OAAS,GAC1B1E,KAAKuJ,UAAU1D,SAAQ,SAAA4D,GAErB,GAAI,EAAKuB,gBAAkBhB,GAAmB,CAC5C,IAAIV,EAAc,EAAKiD,aAAa/D,eACpCiB,EAAElB,UAAUe,GACZlF,EAAU,EAAK2G,cAAc4B,cAAclD,EAAE/G,eAG7C+G,EAAEmD,oBAIJnD,EAAE/B,OAAOD,EAAOrD,Q,+BAOpB,OACI,yBAAKxF,MAAO1B,GAAOC,UAAWoN,IAAKvK,KAAKuK,Q,wCAM5CvK,KAAKkL,MAAM2B,QACX7M,KAAK0H,SACL1H,KAAKiL,SAASvD,SACd1H,KAAK6K,SAASiC,OAAO9M,KAAKsC,MAAOtC,KAAKyK,QACtCzK,KAAKkL,MAAM6B,MAGXC,sBAAsBhN,KAAKwM,gBAAgBS,KAAKjN,S,2CAG7BkN,GACnBlN,KAAK6K,SAASQ,QAAQX,OAAOC,WAAYuC,GAAG,GAC5ClN,KAAKyK,OAAO0C,OAAUzC,OAAOC,WAAauC,EAC1ClN,KAAKyK,OAAO2C,2B,uCAGI,IAAD,OACfC,aAAY,WACN,EAAKrC,gBAAkBhB,GACzB,EAAKgB,cAAgBhB,GAErB,EAAKgB,cAAgBhB,KAEtB,S,GApJahL,IAAMC,WAwJXf,eAAOoM,ICnLhBpN,GAAS,CACXC,UAAW,CACPC,QAAS,OACTC,cAAe,SACfC,UAAW,SACXC,WAAY,SACZK,UAAW,SACXd,MAAOA,EACPgB,MAAO,MACPwP,gBAAiBxQ,EACjBG,WAAYA,EACZD,QAASA,EACTuQ,aAAc,OACdC,YAAa,QACbC,YAAa,MACbC,YAAa5Q,EACbC,SAAUA,EACVS,UAAWR,EACXU,cAAe,QACfiQ,WAAY3Q,EAEZ,4BAA6B,CAC3BD,SAAUA,EACVS,UAAWR,EACX2Q,WAAY3Q,EACZc,MAAO,OAGT,6BAA8B,CAC5Bf,SAAUA,EACVS,UAAWR,EACX2Q,WAAY3Q,EACZc,MAAO,OAGT,6BAA8B,CAC5BA,MAAO,QAIb8P,MAAO,CACL3P,cAAeC,IAAOC,UAAUyP,QAAO,SACvCxP,kBAAmB,KACnBC,kBAAmB,WACnBC,wBAAyB,SACzBC,wBAAyB,aAIzBsP,G,kDACJ,WAAYpP,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAM,GAFM,E,qDAQjB,IAAIoP,EAAiB,CAAC5Q,GAAOC,UAAWD,GAAO0Q,OAC/C,OACE,uBAAGG,KAAM,iDAAkD5K,OAAQ,SAAU6K,IAAI,sBAAsBpP,MAAOkP,GAA9G,2B,GAXoB9O,IAAMC,WAkBjBf,eAAO2P,I,wCCnEhB3Q,GAAS,CACXC,UAAW,CACPC,QAAS,OACTC,cAAe,MACfC,UAAW,SACX2Q,eAAgB,SAChBzQ,UAAWR,EACXc,MAAO,OACPoQ,OAAQ,OAER,4BAA6B,CACzB1Q,UAAWR,GAGf,6BAA8B,CAC1BQ,UAAWR,IAInBmR,OAAQ,CACJrQ,MAAO,oBACPoQ,OAAQ,OACRE,YAAapR,EACbe,QAAS,SAIXsQ,G,kDACJ,WAAY5P,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAM,GAFM,E,qDAQjB,OACE,yBAAKE,MAAO1B,GAAOC,WACf,yBAAKyB,MAAO1B,GAAOiR,OAAQtP,IAAKyP,KAAevP,IAAK,kBACpD,yBAAKH,MAAO1B,GAAOiR,OAAQtP,IAAK0P,KAAWxP,IAAK,mB,GAZpCC,IAAMC,WAkBbf,eAAOmQ,IC/ChBnR,GAAS,CACXC,UAAW,CACPF,WAAYA,EACZF,SAAUA,EACVD,MAAOA,EACPM,QAAS,OACTC,cAAe,SACfE,WAAY,SACZ0Q,eAAgB,SAChBzQ,UAAWR,EACXwR,aAAcxR,EACd2Q,WAAY3Q,EAEZ,4BAA6B,CACzBD,SAAUA,GAGd,6BAA8B,CAC1BS,UAAWR,EACXD,SAAUA,EACV4Q,WAAY3Q,EACZwR,aAAcxR,IAItByR,KAAM,CACF3R,MAAOA,IAMT4R,G,kDACJ,WAAYjQ,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAM,GAFM,E,qDAQjB,OACI,yBAAKE,MAAO1B,GAAOC,WACf,yBAAKyB,MAAO1B,GAAOyR,WAAnB,yBAGA,6BACI,0CACA,uBACI/P,MAAO1B,GAAOuR,KACdtL,OAAO,SACP6K,IAAI,sBACJD,KAtBP,2BAkBG,gBAOA,0BAAMnP,MAAO1B,GAAOyR,WAApB,aACA,uBACI/P,MAAO1B,GAAOuR,KACdtL,OAAO,SACP6K,IAAI,sBACJD,KA7BP,8BAyBG,mBAOA,0BAAMnP,MAAO1B,GAAOyR,WAApB,oB,GA/BK3P,IAAMC,WAsCZf,eAAOwQ,IClEhBxR,GAAS,CACb0R,QAAS,CACPlM,SAAU,WACVwH,IAAK,KACLD,OAAQ,IACR7M,QAAS,OACTC,cAAe,SACfE,WAAY,SACZsR,WAAY7R,EACZoR,YAAapR,EACbmN,UAAW,SACXC,UAAW,OAEX,4BAA6B,CAC3ByE,WAAY7R,EACZoR,YAAapR,GAGf,yDAA0D,CACxD6R,WAAY7R,EACZoR,YAAapR,GAGf,6BAA8B,CAC5B6R,WAAY7R,EACZoR,YAAapR,KAKb8R,G,kDACJ,WAAYrQ,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAM,GAGX,EAAKqQ,SAAW/P,IAAMwL,YACtB,EAAKwE,SAAWhQ,IAAMwL,YANL,E,qDAUjB,OACE,6BACI,kBAAC,GAAD,CAAOD,IAAKvK,KAAKgP,WACjB,yBAAKzE,IAAKvK,KAAK+O,SAAUnQ,MAAO1B,GAAO0R,SACrC,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,U,0CAMW,IAAD,OAClBK,YAAW,WACT,IAAIC,EAAc,EAAKH,SAAStD,QAAQ0D,aACxC,EAAKH,SAASvD,QAAQ2D,qBAAqBF,GAC3C7H,QAAQC,IAAI4H,KACX,O,2CAIH7H,QAAQC,IAAItH,KAAK+O,SAAStD,QAAQ0D,kB,GAjCpBnQ,IAAMC,WAqCTf,eAAO4Q,I,SClEtBO,IAASvC,OAAO,kBAAC,KAAD,KAAW,kBAAC,GAAD,OAAqBwC,SAASC,eAAe,U,mBCVxEC,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,uC","file":"static/js/main.8b6e10d1.chunk.js","sourcesContent":["const color = {\n    dark: '#000000',\n    button: 'rgb(255, 255, 255, 0.4)',\n    link: '#E48F65'\n};\n\nconst fontSize = {\n    extraSmall: '8px',\n    verySmall: '12px',\n    lessSmall: '14px',\n    small: '16px',\n    lessBig: '18px',\n    big: '20px',\n    veryBig: '24px',\n    extraBig: '28px',\n    huge: '32px',\n    veryHuge: '36px',\n    extraHuge: '40px',\n    massive: '44px',\n    veryMassive: '48px',\n    extraMassive: '52px',\n    enormous: '56px',\n    veryEnormous: '60px',\n    extraEnormous: '64px',\n    insane: '68px',\n    veryInsane: '72px',\n    extraInsane: '76px',\n    gaia: '80px',\n    veryGaia: '84px',\n    extraGaia: '88px'\n};\n\nconst padding = {\n    // Increments of 4\n    extraSmall: '4px',\n    verySmall: '8px',\n    small: '12px',\n    // Incremenets of 8\n    big : '20px',\n    veryBig : '28px',\n    extraBig : '36px',\n    // Increments of 12\n    huge: '52px',\n    veryHuge: '64px',\n    extraHuge: '76px',\n    // Incremenets of 16\n    massive: '92px',\n    veryMassive: '108px',\n    extraMassive: '124px',\n    // Increment of 20\n    enourmous: '100px',\n    veryEnormous: '120px',\n    extraEnormous: '140px',\n    // Increment of 40\n    insane: '160px',\n    veryInsane: '200px',\n    extraInsane: '240px'\n\n};\n\nconst fontFamily = {\n    din: 'd-dinregular',\n    opensanslight: 'open_sanslight',\n    opensansregular: 'open_sansregular',\n    demode: 'demoderegular',\n    slice: 'sliceregular'\n};\n\n\nexport { color, fontSize, fontFamily, padding };","import React from 'react'\nimport Radium from 'radium'\n\nimport image from './front_page.jpg'\nimport { tada } from 'react-animations'\nimport { color, fontFamily, fontSize, padding } from './CommonStyles.js';\n\nconst styles = {\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignSelf: 'center',\n        alignItems: 'center',\n        marginTop: padding.big,\n\n        '@media (min-width: 768px)': {  \n          marginTop: padding.extraBig\n        },\n\n        '@media (min-width: 600px) and (orientation: landscape)': {  \n          marginTop: padding.huge\n        },\n\n        '@media (min-width: 1024px)': {  \n          marginTop: padding.huge\n        }\n    },\n\n    title: {\n      fontFamily: fontFamily.demode,\n      color: color.dark,\n      letterSpacing: '0px',\n      fontSize: fontSize.extraHuge,\n\n      '@media (min-width: 768px)': {  \n        fontSize: fontSize.insane\n      },\n\n      '@media (min-width: 600px) and (orientation: landscape)': {  \n        fontSize: fontSize.veryInsane\n      },\n\n      '@media (min-width: 1024px)': {  \n        fontSize: fontSize.veryInsane\n      }\n    },\n\n    body: {\n      color: color.dark,\n      fontFamily: fontFamily.opensanslight,\n      fontSize: fontSize.lessSmall,\n      textAlign: 'center',\n      marginTop: padding.small,\n\n      '@media (min-width: 768px)': {  \n        marginTop: padding.veryBig,\n        fontSize: fontSize.small\n      },\n\n      '@media (min-width: 1024px)': {  \n        fontSize: fontSize.big\n      }\n    },\n\n    img: {\n      marginTop: padding.small,\n      width: '100%',\n      opacity: '0.75',\n\n      '@media (min-width: 768px) and (orientation: landscape)': {  \n        marginTop: padding.veryBig\n      },\n\n      '@media (min-width: 768px)': {  \n        marginTop: padding.veryBig\n      }\n    },\n\n    tada: {\n      animationName: Radium.keyframes(tada, 'tada'),\n      animationDuration: '10s',\n      animationFillMode: 'forwards',\n      animationTimingFunction: 'ease-in-out',\n      animationIterationCount: '1'\n    }\n};\n\nconst bodyA=\"Birds aren't real.\"\nconst bodyB = \"There's an instagram community of the same name with 280 thousand followers. The claim is that birds, and Pigeons in particular, are in fact drones designed by the United States government to surveil the population. This is, of course, a parody of a much more serious situation.\"\nconst bodyC = \"The Internet allows for communities to be formed around fringe ideas, which then permeate culture. This can be productive as well as vile; we now see a good few ractionary conspiracy theories being taken seriously.\";\nconst bodyD = \"Birds aren't real\";\nconst bodyE = \"is a parody of conspiracy theory culture, one so complete that it can easily be mistaken for genuine.\"; \nconst bodyF = \"Liarbirds\";\nconst bodyG = \"is a play on this cultural phenomenon by making fake birds real. It fills the space with an active swarm of digital creatures that respond to user gestures. Consequently, Liarbirds exist in both physical and digital space.\"; \n\n\nclass About extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state={\n\n    };\n  }\n\n  render() {\n    let titleStyle = [styles.title, styles.tada]; \n    return (\n      <div style={styles.container}>\n        <div style={titleStyle}>LIARBIRDS</div>\n        <div style={styles.body}>\n          <i>&quot;{bodyA}&quot;</i>&nbsp;&nbsp;{bodyB}&nbsp;<br/><br/>\n          {bodyC}<i>&nbsp;&quot;{bodyD}&quot;&nbsp;&nbsp;</i>\n          {bodyE}\n          <i>&nbsp;&quot;{bodyF}&quot;&nbsp;&nbsp;</i>\n          {bodyG}\n        </div>\n        <img style={styles.img} src={image} alt={'title'} />\n      </div>\n    );\n  }\n}\n\nexport default Radium(About);","const getRandomNum = (max = 0, min = 0) => {\n    return Math.floor(Math.random() * (max + 1 - min)) + min;\n}\n\nconst map_range = (value, low1, high1, low2, high2) => {\n    return low2 + (high2 - low2) * (value - low1) / (high1 - low1);\n}\n\nconst azimuth = (v) => {\n    return Math.atan2(v.y, v.x);\n}\n\nconst inclination = (v) => {\n    return Math.acos(v.z / v.length());\n}\n\nconst axisRotation = (axis_x, axis_y, axis_z, angle_radians, q) => {\n    var norm = Math.sqrt(axis_x * axis_x + axis_y * axis_y + axis_z * axis_z);\n    axis_x /= norm;\n    axis_y /= norm;\n    axis_z /= norm;\n    var cos = Math.cos(angle_radians / 2);\n    var sin = Math.sin(angle_radians / 2);\n    q.set(axis_x * sin, axis_y * sin, axis_z * sin, cos); \n}\n\nexport {\n    getRandomNum,\n    map_range,\n    azimuth,\n    inclination,\n    axisRotation\n}","import * as THREE from 'three'\nimport Target from './Target.js'\n\nclass Pattern {\n    constructor(patternObj) {\n        this.theta_rad = 0; \n        this.amp = patternObj.amp;  \n        this.isClockwise = patternObj.dir; \n        this.originPos = patternObj.pos; \n        this.moveFactor = patternObj.move; \n        this.targetPos = new THREE.Vector3(0, 0, 0); // Agents follow this target. \n    }\n\n    updateTheta(maxTheta) {\n        // Update theta based on direction. \n        this.theta_rad = this.isClockwise ? \n            this.theta_rad + this.moveFactor : \n            this.theta_rad - this.moveFactor; \n\n        // Reset theta. \n        this.theta_rad = this.theta_rad >= maxTheta ? 0 : this.theta_rad;\n    }\n\n    cartesianX(r) {\n        return this.originPos.x + r * Math.cos(this.theta_rad);\n    }\n\n    cartesianZ(r) {\n        return this.originPos.z + r * Math.sin(this.theta_rad);\n    }\n    \n    cartesianY(r) {\n        return this.originPos.y + this.amp * Math.sin(this.theta_rad);\n    }\n\n    getTargetPos() {\n        return this.targetPos; \n    }\n\n    // Debug Only \n    // To see where we're at. \n    syncPatternObj() {\n        // SparkUtility.syncSceneObject(this.originObj, this.targetPos); \n    }\n}\n\nexport const ellipseConstructor = (originPos, radX, radZ, amplitude, isClockwise, moveFactor) => {\n    return {\n        pos: originPos, // C\n        radx: radX,\n        radz: radZ,\n        amp: amplitude, // C\n        dir: isClockwise, // C\n        move: moveFactor // C\n    }; \n}\n\nexport class EllipsePattern extends Pattern {\n    constructor(patternObj) {\n        super(patternObj); \n        this.radX = patternObj.radx; \n        this.radZ = patternObj.radz; \n        this.maxTheta = 2*Math.PI; \n    }\n\n    update() {\n        // Ellipse: Cartesian coordinates. \n        let xPos = this.cartesianX(this.radX); // Defines polar curve. \n        let zPos = this.cartesianZ(this.radZ); // Define polar curve. \n        let yPos = this.cartesianY(); // Defines height. \n        this.targetPos.set(xPos, yPos, zPos); \n\n        this.updateTheta(this.maxTheta); \n    }\n}\n\nexport const roseConstructor = (originPos, radius, phase, numPetals, amplitude, isSinusoidal, isClockwise, moveFactor) => {\n    return {\n        pos: originPos, // C\n        rad: radius,\n        ph: phase, \n        numP: numPetals,\n        amp: amplitude, // C\n        isSin: isSinusoidal,\n        dir: isClockwise, // C\n        move: moveFactor // C\n    }\n}\n\n// r = asin(b + cTheta); \n// r = acos(b + cTheta); \n// a = radius\n// b = phase\n// c = numPetals\nexport class RosePattern extends Pattern {\n    constructor(patternObj) {\n        super(patternObj); \n        this.rad = patternObj.rad; \n        this.phase = patternObj.ph; \n        this.numPetals = patternObj.numP;\n        this.isSin = patternObj.isSin; \n        this.maxTheta = Math.PI; \n    }\n\n    update() {\n        let xPos, yPos, zPos; \n        let r = this.isSin ? this.rad * Math.sin(this.phase + this.numPetals * this.theta_rad) : \n            this.rad * Math.cos(this.phase + this.numPetals * this.theta_rad)\n\n        xPos = this.cartesianX(r); // Defines polar curve. \n        zPos = this.cartesianZ(r); // Defines polar curve. \n        yPos = this.cartesianY(); // Defines height. \n\n        this.targetPos.set(xPos, yPos, zPos); \n\n        this.updateTheta(this.maxTheta);\n    }\n}","import * as THREE from 'three'\nimport Target from './Target'\nimport * as Utility from './Utility'\nimport { RosePattern, roseConstructor} from './PatternManager'\n\nconst FLOCKING_WEIGHTS = {\n    SEPERATION: 5.0,\n    COHESION: 1.5,\n    ALIGNMENT: 1.5\n}\n\nexport default class Agent {\n    constructor(scene, i, startY, phase) {\n        this.idx = i; \n        // Construct all important variables. \n        this.position = new THREE.Vector3(0, 0, 0); // Get initial velocity\n        this.velocity = new THREE.Vector3(0, 0.01, 0); \n        this.acceleration = new THREE.Vector3(0, 0, 0); \n        this.fSteer = new THREE.Vector3(0, 0, 0); \n        this.sumVec = new THREE.Vector3(0, 0, 0);\n        this.diffVec = new THREE.Vector3(0, 0, 0); \n        this.rotationA = new THREE.Quaternion(); \n        this.rotationB = new THREE.Quaternion(); \n\n        this.initialPatternPosition = new THREE.Vector3(0, startY, 0); \n\n        this.target = new THREE.Vector3(0, 0, 0); \n  \n        // Force and speeds. \n        this.maxForce = 1.5; \n        this.maxSpeed = 1.5; \n        this.maxSlowDownSpeed = 0; \n\n        // Tolerances\n        this.slowDownTolerance = 0.2 * 0.2; \n        this.arriveTolerance = 0.01 * 0.01; \n\n        // Velocity smooth\n        this.smoothFactor = 0.001; \n\n        // Initial position and target.\n        this.initPosition(); \n\n        // Create a polar pattern. \n        this.setupPattern(phase);\n    }\n\n    initPosition() {\n        this.position.x = 0;  \n        this.position.z = 0; \n        this.position.y = -90;\n    }\n\n    setupPattern(phase) {\n        // Setup pattern variables. \n        let pos = this.initialPatternPosition.clone(); // Target position\n        let d = this.idx % 2 === 0 ? true : false; // Direction\n        let isSin = d; \n        let rad = 50; // Radius\n        let moveFactor = THREE.Math.degToRad(0.1); // How fast to move\n        let petals = 5; \n        let amp = 20; \n        let patternObj = roseConstructor(pos, rad, phase, petals, amp, isSin, d, moveFactor); \n        this.rosePattern = new RosePattern(patternObj); \n    }\n\n    updateAgent(nAgents) {\n        // Behaviors. \n        this.applyBehaviors(nAgents);\n        this.updatePosition();\n    }\n\n    applyBehaviors(nAgents) {\n        this.seek();\n        this.applyForce(); \n\n        this.flock(nAgents); \n    }\n\n    flock(nAgents) {\n        if (nAgents.length > 0) {\n            // Seperation\n            this.seperation(nAgents);\n            this.applyForce();\n\n            // Cohesion\n            this.cohesion(nAgents);\n            this.applyForce();\n\n            // Alignment\n            this.align(nAgents); \n            this.applyForce(); \n        }\n    }\n\n    seek() {\n        this.fSteer.subVectors(this.target, this.position); \n        let d = this.fSteer.lengthSq();\n        this.fSteer.normalize();\n\n        if (d < this.slowDownTolerance && d > this.arriveTolerance) {\n            // Start slowing down. \n            let newMaxSpeed = Utility.map_range(d, this.slowDownTolerance, this.arriveTolerance, this.maxSpeed, this.maxSlowDownSpeed); \n            this.fSteer.multiplyScalar(newMaxSpeed); \n        } else {\n            // We are still trying to get to the target. \n            this.fSteer.multiplyScalar(this.maxSpeed); \n        }\n\n        this.fSteer.sub(this.velocity); \n        //this.fSteer = MathUtility.clamp(this.fSteer, this.maxForce); \n        this.fSteer.clampLength(-99999, this.maxForce); \n    }\n\n    applyForce() {\n        this.acceleration.add(this.fSteer); \n    }\n\n    updatePosition() {\n        // // What's my target velocity? \n        this.sumVec.addVectors(this.velocity, this.acceleration); \n        \n        // What's my intermediate velocity? \n        // Lerp the velocity rather than just updating straight up.\n        this.velocity = this.velocity.lerp(this.sumVec, this.smoothFactor); \n        //this.velocity = MathUtility.clamp(this.velocity, this.maxSpeed); \n        this.velocity.clampLength(-9999, this.maxSpeed); \n\n        this.position.add(this.velocity); \n\n        // Reset acceleration. \n        this.acceleration.multiplyScalar(0);\n    }\n\n    // Receives neighboring agents using Octree calculations. \n    seperation(nAgents) {\n        this.fSteer.set(0, 0, 0); \n        this.sumVec.set(0, 0, 0); \n\n        if (nAgents.length > 0) {\n            nAgents.forEach(a => {\n                this.diffVec.subVectors(this.position, a.position); \n                this.diffVec.normalize(); \n                this.diffVec.divideScalar(this.diffVec.length());  // Weight the vector properly based on the distance from the target. \n                this.sumVec.add(this.diffVec); \n            });\n            \n            // Calculate desired force using the average desired velocity \n            this.sumVec.divideScalar(nAgents.length); \n            if (this.sumVec.lengthSq() > 0) {\n                this.sumVec.normalize(); \n                this.sumVec.clampLength(-99999, this.maxSpeed);\n                this.fSteer.subVectors(this.sumVec, this.velocity);\n                this.fSteer.clampLength(-99999, this.maxForce); \n                this.fSteer.multiplyScalar(FLOCKING_WEIGHTS.SEPERATION); // Apply seperation weight. \n            }\n        }\n    }\n    \n    // Receives neighboring agents using Octree calculations. \n    cohesion(nAgents) {\n        this.target.set(0, 0, 0); \n        this.fSteer.set(0, 0, 0); \n\n        if (nAgents.length > 0) {\n            nAgents.forEach(a => {\n                this.target.add(a.position); \n            }); \n\n            this.target.divideScalar(nAgents.length); \n            this.seek(); // Seek the new target\n            this.fSteer.multiplyScalar(FLOCKING_WEIGHTS.COHESION); \n        }\n    }\n    \n    // Receives neighboring agents using Octree calculations. \n    align(nAgents) {\n        this.fSteer.set(0, 0, 0); \n\n        if (nAgents.length > 0) {\n            nAgents.forEach(a => {\n                this.fSteer.add(a.velocity); \n            }); \n        \n            this.fSteer.divideScalar(nAgents.length); \n            this.fSteer.normalize(); \n            this.fSteer.multiplyScalar(this.maxSpeed); \n            this.fSteer.sub(this.velocity); \n            this.fSteer.clampLength(-99999, this.maxForce); \n            this.fSteer.multiplyScalar(FLOCKING_WEIGHTS.ALIGNMENT); // Apply alignment weight. \n        }\n    }\n}","import * as THREE from 'three'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js'\nimport Agent from './Agent.js'\nimport model from '../models/jellyman.glb'; \nimport * as Utility from './Utility';\n\nconst loader = new GLTFLoader(); \n\nexport default class Liarbird extends Agent {\n    constructor(scene, idx, startY, phase) {\n        super(scene, idx, startY, phase);\n        this.loadLiarbird(scene); \n    }\n\n    loadLiarbird(scene) {\n        loader.load(model, gltf=> {\n            // Set important gltf properties.  \n            this.jellyman = gltf.scene; \n            // Move the pivot close to its neck. \n            this.jellyman.position.set(0, -1.5, 0);\n            this.jellyman.frustumCulled = false;\n\n            // Agent is the parent object. \n            this.agent = new THREE.Group();\n            this.agent.add(this.jellyman); \n            this.agent.frustumCulled = false;\n            this.agent.castShadow = true;\n            this.agent.receiveShadow = true; \n\n            this.agentRotation = this.agent.rotation; \n            this.agentScale = this.agent.scale; \n            this.agentAnimations = gltf.animations; \n\n            // Scale\n            this.agentScale.set(25, 25, 25);\n\n            // Animation. \n            this.animationMixer = new THREE.AnimationMixer(this.agent); \n            var action = this.animationMixer.clipAction(this.agentAnimations[0]);\n            action.play(); \n\n            console.log(this.agent);\n\n            // Add it to the scene. \n            scene.add(this.agent); \n        }, undefined, function ( error ) {\n            console.error( error );\n        }); \n    }\n\n    update(delta, nAgents) {\n        // Animation update. \n        if (this.animationMixer) {\n            this.animationMixer.update(delta);\n\n            // Behaviors. \n            this.updateAgent(nAgents); \n\n            // Sync rotation and position. \n            this.syncPosition();\n            this.syncRotation(); \n        }\n    }\n\n    syncPosition() {\n        // Sync position of the agent with \n        // the actual agent scene. \n        this.agent.position.copy(this.position);\n    }\n\n    syncRotation() {\n        // Agent rotation\n        let azimuth, inclination; \n        azimuth = Utility.azimuth(this.velocity); \n        inclination = Utility.inclination(this.velocity);\n\n        Utility.axisRotation(0, 0, 1, azimuth - Math.PI/2, this.rotationA); \n        Utility.axisRotation(1, 0, 0, Math.PI/2 - inclination, this.rotationB); \n                    \n        this.rotationA.multiply(this.rotationB);\n        this.agent.setRotationFromQuaternion(this.rotationA);\n\n        // Jellyman rotation\n        this.jellyman.rotation.y += 0.05;\n    }\n\n    updateRosePattern() {\n         // Pattern updates.\n         this.rosePattern.update();\n         this.setTarget(this.rosePattern.getTargetPos()); \n    }\n\n    setTarget(target) {\n        this.target.copy(target);\n    }\n}\n\n\n","\nimport { Vector3 } from 'math-ds';\nimport { PointOctree } from 'sparse-octree'; \n\nconst BIAS = 0.0; // No loose octree. \nconst MAX_POINTS = 2.0; // Maximum points before the tree splits. \nexport class Octree {\n    constructor(origin, boundary) {\n        let min = new Vector3(0, 0, 0);\n        let max = new Vector3(0, 0, 0);\n\n        min.x = origin.x - boundary; \n        min.y = origin.y - boundary; \n        min.z = origin.z - boundary; \n\n        max.x = origin.x + boundary; \n        max.y = origin.y + boundary; \n        max.z = origin.z + boundary;\n\n        this.tree = new PointOctree(min, max, BIAS, MAX_POINTS); \n    }\n\n    // Insert a point into the octree along with the data that should be retried. \n    insertPoint(position, agent) {\n        this.tree.insert(position, agent); \n    }\n\n    // Finds all the points in the octree within a given radius. \n    scanForPoints(position, radius) {\n        return this.tree.findPoints(position, radius, true); \n    }\n\n    pointCount() {\n        return this.tree.pointCount; \n    } \n}\n\nconst OCTREE_HOOD_BOUNDARY = 75; \nconst NEIGHBOUR_RADIUS = 40; // Radius from the origin.\nexport class OctreeManager {\n    constructor() {\n        this.flockOctree = {};\n    }\n\n    update(flockTarget, liarbirds) {\n        this.setupOctree(flockTarget, liarbirds); \n    }\n\n    setupOctree(flockTarget, liarbirds) {\n        this.flockOctree = new Octree(flockTarget, OCTREE_HOOD_BOUNDARY); \n        liarbirds.forEach(l => {\n            this.flockOctree.insertPoint(l.position, l); \n        }); \n    }\n\n    // Neighbours around a point. \n    getNeighbours(origin) {\n        let neighbours; let nAgents=[]; \n        neighbours = this.flockOctree.scanForPoints(origin, NEIGHBOUR_RADIUS);\n        neighbours.forEach(n => {\n            let a = n['data']; \n            nAgents.push(a); \n        }); \n        return nAgents; \n    }\n}\n\n          ","import React from 'react'\nimport Radium from 'radium'\nimport * as THREE from 'three'\nimport oc from 'three-orbit-controls'\nimport Liarbird from './Liarbird.js'\nimport Stats from 'stats.js'\nimport { OctreeManager } from './OctreeManager.js'\nimport { EllipsePattern, ellipseConstructor } from './PatternManager.js'\nimport { fadeIn } from 'react-animations'\n\nconst OrbitControls = oc(THREE); \nconst loader = new THREE.TextureLoader();\nexport const WORLD_STATE = {\n  PATTERN: 0,\n  FLOCK: 1\n}; \n\nconst styles = {\n    container: {\n        // position: 'absolute',\n        zIndex: 0,\n        top: '0%',\n        overflowX: 'hidden',\n        overflowY: 'auto'\n    },\n\n    fadeIn: {\n      animationName: Radium.keyframes(fadeIn, 'fade'),\n      animationDuration: '0s',\n      animationFillMode: 'forwards',\n      animationTimingFunction: 'linear'\n    }\n};\n\nclass World extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state={\n\n    };\n\n    this.ref = React.createRef(); \n    \n    this.scene = new THREE.Scene(); \n    // (FOV, AspectRatio, Near Clipping, Far Clipping)\n    this.camera = new THREE.PerspectiveCamera(100, window.innerWidth/window.innerHeight, 0.05, 2000);\n    this.camera.position.set(100, 150, 150); \n\n    // Renders the scene as a canvas element. \n    this.renderer = new THREE.WebGLRenderer({\n      alpha: true\n    }); \n\n    // All the agents. \n    this.liarbirds = [];\n\n    // Octree manager for flocking. \n    this.octreeManager = new OctreeManager(); \n\n    // Starting state is patterns. \n    this.curWorldState = WORLD_STATE.PATTERN;\n\n    this.controls = new OrbitControls(this.camera); \n\n    this.stats = new Stats(); \n\n    this.clock = new THREE.Clock(); \n  }\n\n  componentDidMount() {\n    // Set renderer properties\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.outputEncoding = THREE.sRGBEncoding; \n\n    // Mount the canvas at the current div. \n    this.ref.current.appendChild(this.renderer.domElement); \n    this.ref.current.appendChild(this.stats.dom);\n\n    // -------- Lighting ----------------\n    var ambientLight = new THREE.AmbientLight(0xD7D3D3);\n    ambientLight.intensity = 1.5;\n    var directionalLight = new THREE.DirectionalLight(0xffffff);\n    directionalLight.intensity = 3.0;\n    directionalLight.position.set(0, 50, 50).normalize();\n    this.scene.add( ambientLight );\n    this.scene.add(directionalLight);\t\n\n    // ---------- Geometry -----------------\n    let minHeight = -100; \n    let maxHeight = 60; \n    let numAgents = 12; \n    let phase = [0, 0, 3, 3, 5, 5, 7, 7, 9, 9, 11, 11]; \n    let inc = (Math.abs(minHeight) + maxHeight)/numAgents; \n    let startPos = minHeight; \n\n    for (let i = 0; i < numAgents; i++) {\n        let l = new Liarbird(this.scene, i, startPos, phase[i]); \n        this.liarbirds.push(l); \n        startPos += inc; \n    }\n\n    // ---------- Camera -------------------\n    this.controls.enablePan = false;\n    // controls.autoRotate = true; \n    // controls.autoRotateSpeed = 0.1;\n    this.controls.enabled = false; \n    this.controls.enableKeys = false;\n\n    // ---------- Flock Pattern ---------------\n    let o = new THREE.Vector3(0, 0, 0); // Flock around the origin. \n    let moveFactor = THREE.Math.degToRad(0.1); \n    // (Origin Vector, RadiusX, RadiusZ, Amplitude, isClockwise, MoveFactor)\n    let patternObj = ellipseConstructor(o, 60, 0, 80, true, moveFactor);\n    this.flockPattern = new EllipsePattern(patternObj);   \n\n    // this.scene.add(new THREE.AxesHelper(30));\n    this.initThreeRender(); \n    this.scheduleStates(); \n  }\n\n  update() {\n    // Flocking updates. \n    if (this.curWorldState === WORLD_STATE.FLOCK) {\n      this.flockPattern.update(); \n      let flockTarget = this.flockPattern.getTargetPos(); \n      // Update octree manager for flocking. \n      this.octreeManager.update(flockTarget, this.liarbirds); \n    }\n\n    var delta = this.clock.getDelta(); \n    let nAgents = []; \n    if (this.liarbirds.length > 0) {\n      this.liarbirds.forEach(l => {\n        // When in flock state, set same target for everybody.\n        if (this.curWorldState === WORLD_STATE.FLOCK) {\n          let flockTarget = this.flockPattern.getTargetPos(); \n          l.setTarget(flockTarget); \n          nAgents = this.octreeManager.getNeighbours(l.position); \n        } else {\n          // We are not flocking right now, so ROSE pattern it is. \n          l.updateRosePattern(); \n        }\n\n        // Send neighboring agents for flocking. \n        l.update(delta, nAgents); \n      }); \n    }\n  }\n\n  render() {\n    let containStyle = [styles.container, styles.fadeIn]; \n    return (\n        <div style={styles.container} ref={this.ref} />\n    );\n  }\n\n  initThreeRender() {\n    // Render loop. \n    this.stats.begin();\n    this.update(); \n    this.controls.update();\n    this.renderer.render(this.scene, this.camera);\n    this.stats.end();\n\n    // Register this function as a callback to every repaint from the browser.\n    requestAnimationFrame(this.initThreeRender.bind(this)); \n  }\n\n  updateRendererHeight(h) {\n    this.renderer.setSize(window.innerWidth, h, true);\n    this.camera.aspect = (window.innerWidth)/(h);\n    this.camera.updateProjectionMatrix();\n  }\n\n  scheduleStates() {\n    setInterval(() => {\n      if (this.curWorldState === WORLD_STATE.FLOCK) {\n        this.curWorldState = WORLD_STATE.PATTERN; \n      } else {\n        this.curWorldState = WORLD_STATE.FLOCK; \n      }\n    }, 20000); \n  }\n}\n\nexport default Radium(World);","import React from 'react'\nimport Radium from 'radium'\n\nimport { pulse } from 'react-animations'\nimport { color, fontFamily, fontSize, padding } from './CommonStyles.js';\n\n\nconst styles = {\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignSelf: 'center',\n        alignItems: 'center',\n        textAlign: 'center',\n        color: color.dark,\n        width: '55%',\n        backgroundColor: color.button,\n        fontFamily: fontFamily.slice,\n        padding: padding.small,\n        borderRadius: '10px',\n        borderStyle: 'solid',\n        borderWidth: '3px',\n        borderColor: color.dark,\n        fontSize: fontSize.big,\n        marginTop: padding.big,\n        letterSpacing: '0.8px',\n        lineHeight: padding.big,\n\n        '@media (min-width: 768px)': {  \n          fontSize: fontSize.huge,\n          marginTop: padding.veryBig,\n          lineHeight: padding.veryBig,\n          width: '45%'\n        },\n\n        '@media (min-width: 1024px)': {\n          fontSize: fontSize.veryHuge,\n          marginTop: padding.extraBig,\n          lineHeight: padding.extraBig,\n          width: '40%'\n        },\n\n        '@media (min-width: 1200px)': {\n          width: '33%'\n        }\n    },\n\n    pulse: {\n      animationName: Radium.keyframes(pulse, 'flash'),\n      animationDuration: '2s',\n      animationFillMode: 'forwards',\n      animationTimingFunction: 'linear',\n      animationIterationCount: 'infinite'\n    }\n};\n\nclass FancyButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state={\n\n    };\n  }\n\n  render() {\n    let containerStyle = [styles.container, styles.pulse]; \n    return (\n      <a href={'https://www.instagram.com/ar/2488677321439619/'} target={'_blank'} rel=\"noopener noreferrer\" style={containerStyle}>\n          Open with Instagram\n      </a>\n    );\n  }\n}\n\nexport default Radium(FancyButton);","import React from 'react'\nimport Radium from 'radium'\n\nimport postcard_back from './postcard_back.jpg'\nimport hyde_park from './hyde_park.jpg'\nimport { padding } from './CommonStyles.js';\n\nconst styles = {\n    container: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignSelf: 'center',\n        justifyContent: 'center',\n        marginTop: padding.big,\n        width: '100%',\n        height: '100%',\n\n        '@media (min-width: 768px)': {  \n            marginTop: padding.veryBig\n        },\n\n        '@media (min-width: 1024px)': {  \n            marginTop: padding.extraBig\n        }\n    },\n\n    poster: {\n        width: 'calc(100%/2 - 4%)',\n        height: '100%',\n        marginRight: padding.verySmall,\n        opacity: '0.65'\n    }\n};\n\nclass Posters extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state={\n\n    };\n  }\n\n  render() {\n    return (\n      <div style={styles.container}>\n          <img style={styles.poster} src={postcard_back} alt={'postcard_back'} />\n          <img style={styles.poster} src={hyde_park} alt={'hyde_park'} />\n      </div>\n    );\n  }\n}\n\nexport default Radium(Posters);","import React from 'react'\nimport Radium from 'radium'\n\nimport { color, fontFamily, fontSize, padding } from './CommonStyles.js';\n\nconst styles = {\n    container: {\n        fontFamily: fontFamily.din,\n        fontSize: fontSize.lessSmall,\n        color: color.dark,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: padding.big,\n        marginBottom: padding.verySmall,\n        lineHeight: padding.big,\n\n        '@media (min-width: 768px)': {  \n            fontSize: fontSize.small\n        },\n\n        '@media (min-width: 1024px)': {\n            marginTop: padding.veryBig,\n            fontSize: fontSize.big,\n            lineHeight: padding.veryBig,\n            marginBottom: padding.veryBig\n        }\n    },\n\n    link: {\n        color: color.link\n    }\n};\n\nconst amay = 'https://amaykataria.com'; \nconst phil = 'https://philipmulliken.com'; \nclass Footer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state={\n\n    };\n  }\n\n  render() {\n    return (\n        <div style={styles.container}>\n            <div style={styles.developed}>\n                 Developed by Silkcube\n            </div>\n            <div>\n                <span>©&nbsp;</span>\n                <a \n                    style={styles.link} \n                    target='_blank' \n                    rel=\"noopener noreferrer\" \n                    href={amay}>\n                    Amay Kataria\n                </a>\n                <span style={styles.developed}>&nbsp;|&nbsp;</span>\n                <a \n                    style={styles.link} \n                    target='_blank' \n                    rel=\"noopener noreferrer\" \n                    href={phil}>\n                    Philip Mulliken\n                </a>\n                <span style={styles.developed}>, 2020&nbsp;</span>\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default Radium(Footer);","import React from 'react'\nimport Radium from 'radium'\nimport { padding } from './CommonStyles';\nimport About from './About.js'\nimport World from './World.js'\nimport FancyButton from './FancyButton.js'\nimport Posters from './Posters.js'\nimport Footer from './Footer.js'\n\nconst styles = {\n  content: {\n    position: 'absolute',\n    top: '0%',\n    zIndex: '1',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginLeft: padding.big, \n    marginRight: padding.big,\n    overflowX: 'hidden',\n    overflowY: 'auto',\n\n    '@media (min-width: 768px)': {  \n      marginLeft: padding.veryHuge,\n      marginRight: padding.veryHuge\n    },\n\n    '@media (min-width: 600px) and (orientation: landscape)': {  \n      marginLeft: padding.massive,\n      marginRight: padding.massive\n    },\n\n    '@media (min-width: 1024px)': {  \n      marginLeft: padding.veryInsane,\n      marginRight: padding.veryInsane\n    }\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state={\n    };\n\n    this.totalRef = React.createRef(); \n    this.worldRef = React.createRef(); \n  }\n\n  render() {\n    return (\n      <div>\n          <World ref={this.worldRef} />\n          <div ref={this.totalRef} style={styles.content}>\n            <About />\n            <FancyButton />\n            <Posters />\n            <Footer />\n          </div>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      let totalHeight = this.totalRef.current.scrollHeight; \n      this.worldRef.current.updateRendererHeight(totalHeight);\n      console.log(totalHeight);\n    }, 500); \n  }\n\n  componentDidUpdate() {\n    console.log(this.totalRef.current.scrollHeight);\n  }\n}\n\nexport default Radium(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './font/stylesheet.css';\nimport App from './components/App';\nimport {StyleRoot} from 'radium'\n\n// Use StyleRoot to enable keyframes and media queries for Javascript type\n// styles with Radium in components. \n// Single render function for the entire application. \nReactDOM.render(<StyleRoot><App /></StyleRoot>, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/front_page.2814188b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jellyman.5ff4e054.glb\";","module.exports = __webpack_public_path__ + \"static/media/postcard_back.d5d726e7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hyde_park.6049994a.jpg\";"],"sourceRoot":""}